/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import scottrak.Classes.Individual;

/**
 *
 * @author Eric
 */
public class MainMenu extends javax.swing.JFrame implements Observer{

    private DefaultTableModel mod1;
    private DefaultTableModel mod2;
    private DefaultTableModel mod3;
    private DefaultTableModel mod4;
    
    private FilterOb ob;
    
    private static Statement st = null;
    private static ResultSet rs = null;
    private static PreparedStatement pst = null;
    private static Connection connection = DBcon.getConnection();
    
    
    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        //this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();
        
        this.setTitle("ScotTrak");
        jTextField1.setText("");
        jTextField1.requestFocusInWindow();
        
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        
        
        mod1 = (DefaultTableModel) IndividualTable.getModel();
        mod2 = (DefaultTableModel) CorpOrgTable.getModel();
        mod3 = (DefaultTableModel) DonationsTable.getModel();
        mod4 = (DefaultTableModel) jTable1.getModel();
        
        
    }
    
    public void setFObModel(FilterOb o){
        this.ob = o;
    }
    
    
    public void toExcel(JTable table, File file){
		
            try{
			TableModel model = table.getModel();
			FileWriter excel = new FileWriter(file);

			for(int i = 0; i < model.getColumnCount(); i++){
				excel.write(model.getColumnName(i) + "\t");
			}
                        
                        
			excel.write("\n");

                        System.out.println(model.getValueAt(1,0).toString());
                        
			for(int i=1; i < model.getRowCount(); i++) {
				for(int j=1; j < model.getColumnCount(); j++) {
					excel.write(model.getValueAt(i,j).toString()+"\t");
				}
				excel.write("\n");
			}

			excel.close();
		}catch(IOException e){ System.out.println(e); }
        
	}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        IndividualTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        CorpOrgTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        DonationsTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton8 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        IndividualTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11"
            }
        ));
        jScrollPane1.setViewportView(IndividualTable);

        jTabbedPane1.addTab("Individual", jScrollPane1);

        CorpOrgTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ));
        jScrollPane2.setViewportView(CorpOrgTable);

        jTabbedPane1.addTab("Corporation/Organization", jScrollPane2);

        DonationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        jScrollPane4.setViewportView(DonationsTable);

        jTabbedPane1.addTab("Donations - Individual", jScrollPane4);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane5.setViewportView(jTable1);

        jTabbedPane1.addTab("Donations - Corporation/Organization", jScrollPane5);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        jButton2.setText("Delete Donor");

        jTextField1.setText("jTextField1");
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setText("Type to Search:");

        jButton3.setText("Delete Donation");

        jButton6.setText("New Donation");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(79, 79, 79)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton2)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton5)
                .addComponent(jLabel4)
                .addComponent(jButton3)
                .addComponent(jButton6))
        );

        jLabel2.setText("Filter Menu:");

        jLabel3.setText("Set Campaign:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton8.setText("Apply");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(97, 97, 97))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(28, 28, 28))
        );

        jScrollPane3.setViewportView(jPanel5);

        jTabbedPane2.addTab("Filter", jScrollPane3);

        jButton9.setText("Insert");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel1.setText("Full Name:");

        jLabel5.setText("Street:");

        jTextField2.setText("jTextField2");

        jTextField3.setText("jTextField3");

        jTextField4.setText("jTextField4");

        jTextField5.setText("jTextField5");

        jLabel6.setText("Phone:");

        jTextField6.setText("jTextField6");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton9))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField5)
                            .addComponent(jTextField6))
                        .addGap(0, 552, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addContainerGap())
        );

        jScrollPane6.setViewportView(jPanel6);

        jTabbedPane2.addTab("New Donor", jScrollPane6);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 891, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem7.setText("Print");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem8.setText("Export");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem1.setText("Exit");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Reports");

        jMenuItem2.setText("Generate Report");
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        jMenu5.setText("Database");

        jMenuItem3.setText("Change Database");
        jMenu5.add(jMenuItem3);

        jMenuBar1.add(jMenu5);

        jMenu4.setText("Tools");

        jMenuItem4.setText("Settings");
        jMenu4.add(jMenuItem4);

        jMenuBar1.add(jMenu4);

        jMenu6.setText("Help");

        jMenuItem5.setText("About");
        jMenu6.add(jMenuItem5);

        jMenuItem6.setText("Documentation");
        jMenu6.add(jMenuItem6);

        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        
        //RowSorter
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(this.mod1); //Change here
        IndividualTable.setRowSorter(rowSorter); //Change here
        
        jTextField1.getDocument().addDocumentListener(new DocumentListener(){ 
            @Override
            public void insertUpdate(DocumentEvent e) {
               String text = jTextField1.getText(); 

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null); //Change here
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text)); //Change here
                }
               
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jTextField1.getText(); 

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null); //Change here
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text)); //Change here
                }
                
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
            
        });
        
        
        //RowSorter 1
        TableRowSorter<TableModel> rowSorter1 = new TableRowSorter<>(this.mod2); //Change here
        CorpOrgTable.setRowSorter(rowSorter1); //Change here
        
        jTextField1.getDocument().addDocumentListener(new DocumentListener(){ 
            @Override
            public void insertUpdate(DocumentEvent e) {
               String text = jTextField1.getText(); 

                if (text.trim().length() == 0) {
                    rowSorter1.setRowFilter(null); //Change here
                } else {
                    rowSorter1.setRowFilter(RowFilter.regexFilter("(?i)" + text)); //Change here
                }
               
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jTextField1.getText(); 

                if (text.trim().length() == 0) {
                    rowSorter1.setRowFilter(null); //Change here
                } else {
                    rowSorter1.setRowFilter(RowFilter.regexFilter("(?i)" + text)); //Change here
                }
                
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
            
        });
        
        //RowSorter 2
        TableRowSorter<TableModel> rowSorter2 = new TableRowSorter<>(this.mod3); //Change here
        DonationsTable.setRowSorter(rowSorter2); //Change here
        
        jTextField1.getDocument().addDocumentListener(new DocumentListener(){ 
            @Override
            public void insertUpdate(DocumentEvent e) {
               String text = jTextField1.getText(); 

                if (text.trim().length() == 0) {
                    rowSorter2.setRowFilter(null); //Change here
                } else {
                    rowSorter2.setRowFilter(RowFilter.regexFilter("(?i)" + text)); //Change here
                }
               
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jTextField1.getText(); 

                if (text.trim().length() == 0) {
                    rowSorter2.setRowFilter(null); //Change here
                } else {
                    rowSorter2.setRowFilter(RowFilter.regexFilter("(?i)" + text)); //Change here
                }
                
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
            
        });
        
        
        //RowSorter 3
        TableRowSorter<TableModel> rowSorter3 = new TableRowSorter<>(this.mod4); //Change here
        jTable1.setRowSorter(rowSorter3); //Change here
        
        jTextField1.getDocument().addDocumentListener(new DocumentListener(){ 
            @Override
            public void insertUpdate(DocumentEvent e) {
               String text = jTextField1.getText(); 

                if (text.trim().length() == 0) {
                    rowSorter3.setRowFilter(null); //Change here
                } else {
                    rowSorter3.setRowFilter(RowFilter.regexFilter("(?i)" + text)); //Change here
                }
               
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = jTextField1.getText(); 

                if (text.trim().length() == 0) {
                    rowSorter3.setRowFilter(null); //Change here
                } else {
                    rowSorter3.setRowFilter(RowFilter.regexFilter("(?i)" + text)); //Change here
                }
                
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
            
        });
        
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Individuals Table for all Campaigns");
        MessageFormat footer = null;
        
        try {
            /* print the table */
            boolean complete = IndividualTable.print(JTable.PrintMode.FIT_WIDTH, header, footer,
                                                 true, null,
                                                 true, null);
 
            /* if printing completes */
            if (complete) {
                /* show a success message */
                JOptionPane.showMessageDialog(this,
                                              "Printing Complete",
                                              "Printing Result",
                                              JOptionPane.INFORMATION_MESSAGE);
            } else {
                /* show a message indicating that printing was cancelled */
                JOptionPane.showMessageDialog(this,
                                              "Printing Cancelled",
                                              "Printing Result",
                                              JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (PrinterException pe) {
            /* Printing failed, report to the user */
            JOptionPane.showMessageDialog(this,
                                          "Printing Failed: " + pe.getMessage(),
                                          "Printing Result",
                                          JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        this.toExcel(IndividualTable, new File("C:\\Users\\Eric\\Documents\\output.xlsx"));
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:

        System.out.println(jComboBox1.getSelectedItem().toString());
        this.setFObModel(new FilterOb());
        this.ob.addObserver(this);
        this.ob.setCamp(jComboBox1.getSelectedItem().toString());

    }//GEN-LAST:event_jButton8ActionPerformed

    /*
    
    System.out.println(jComboBox1.getSelectedItem().toString());
        this.setFObModel(new FilterOb());
        this.ob.addObserver(this);
        this.ob.setCamp(jComboBox1.getSelectedItem().toString());
    
    */
    
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        // Base Inserts off this.
        
        try{
            
            String sql1 = "INSERT INTO DONOR(Street,Phone) values(?,?)";
            String sql2 = "INSERT INTO Individual(DonorID, Fname, Minit, Lname) values(?,?,?,?)";
            
            
            pst = connection.prepareStatement(sql1);
            pst.setString(1, jTextField5.getText());
            pst.setString(2, jTextField6.getText());
            pst.execute();
            
            String dID = "SELECT DonorID FROM Donor WHERE Donor.Street like '" + jTextField5.getText() + "' "
                    + "AND Donor.Phone like '" + jTextField6.getText() + "' ";
            
            pst = connection.prepareStatement(dID);
            rs = pst.executeQuery();
            
            String donorID = null;
            
            while(rs.next()){
            
                System.out.println("DonorID is: " + rs.getString(1));
                donorID = rs.getString(1);
                
            }
            
            pst = connection.prepareStatement(sql2);
            pst.setString(1, donorID);
            pst.setString(2, jTextField2.getText());
            pst.setString(3,jTextField3.getText());
            pst.setString(4,jTextField2.getText());
            pst.execute();
            
            System.out.println("INSERT SUCCESSFUL");
        }catch(Exception ex){
            System.out.println(ex.getLocalizedMessage().toString());
        }
        
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        
    }//GEN-LAST:event_jButton9ActionPerformed

    /*
    
    // Base Inserts off this.
        
        try{
            
            String sql1 = "INSERT INTO DONOR(Street,Phone) values(?,?)";
            String sql2 = "INSERT INTO Individual(DonorID, Fname, Minit, Lname) values(?,?,?,?)";
            
            
            pst = connection.prepareStatement(sql1);
            pst.setString(1, jTextField5.getText());
            pst.setString(2, jTextField6.getText());
            pst.execute();
            
            String dID = "SELECT DonorID FROM Donor WHERE Donor.Street like '" + jTextField5.getText() + "' "
                    + "AND Donor.Phone like '" + jTextField6.getText() + "' ";
            
            pst = connection.prepareStatement(dID);
            rs = pst.executeQuery();
            
            String donorID = null;
            
            while(rs.next()){
            
                System.out.println("DonorID is: " + rs.getString(1));
                donorID = rs.getString(1);
                
            }
            
            pst = connection.prepareStatement(sql2);
            pst.setString(1, donorID);
            pst.setString(2, jTextField2.getText());
            pst.setString(3,jTextField3.getText());
            pst.setString(4,jTextField2.getText());
            pst.execute();
            
            System.out.println("INSERT SUCCESSFUL");
        }catch(Exception ex){
            System.out.println(ex.getLocalizedMessage().toString());
        }
        
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
    
    */
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        if (mod1.getRowCount() > 0) {
            for (int i = mod1.getRowCount() - 1; i > -1; i--) {
                mod1.removeRow(i);
            }
        }
            
        if (mod2.getRowCount() > 0) {
            for (int i = mod2.getRowCount() - 1; i > -1; i--) {
                mod2.removeRow(i);
            }
        
        }
        
        if (mod3.getRowCount() > 0) {
            for (int i = mod3.getRowCount() - 1; i > -1; i--) {
                mod3.removeRow(i);
            }
            
        }    
            
         if (mod4.getRowCount() > 0) {
            for (int i = mod4.getRowCount() - 1; i > -1; i--) {
                mod4.removeRow(i);
            }
            
        }
         
         System.out.println("Tables Cleared.");
           
    }//GEN-LAST:event_jButton5ActionPerformed

    
    
    /*
        System.out.println(jComboBox1.getSelectedItem().toString());
        this.setFObModel(new FilterOb());
        this.ob.addObserver(this);
        this.ob.setCamp(jComboBox1.getSelectedItem().toString());
    */
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CorpOrgTable;
    private javax.swing.JTable DonationsTable;
    private javax.swing.JTable IndividualTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        String[] camp = {(String) arg};
        
        mod1.addRow(camp);
        
        
        // MOD 1
        try{
            
            pst = connection.prepareStatement("SELECT Fname, Minit, Lname,"
                + "Street, "
                + "City, State, ZipCode, "
                + "Phone, "
                + "EmailAddress,"
                + "UserStatus, Solicitation "
                + " FROM Individual left outer join Donor on (Individual.DonorID = Donor.DonorID)");
            
            rs = pst.executeQuery();
            
            while(rs.next()){
                
                String[] res = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),
                                rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11)};
                            
                            mod1.addRow(res);
                
            }
        
        }catch(Exception ex){
            System.out.println(ex.getLocalizedMessage().toString());
        }
        
        // MOD 2
        try{
            
            pst = connection.prepareStatement("SELECT OrgName, PrimaryContact,"
                    + "Street, "
                    + "City, State, ZipCode,"
                    + "Phone, "
                    + "EmailAddress,"
                    + "UserStatus, Solicitation"
                    + " FROM Corporate_Organization left outer join Donor on (Corporate_Organization.DonorID = Donor.DonorID)");
            
            rs = pst.executeQuery();
            
            while(rs.next()){
                
                String[] res = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),
                                rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10)};
                            
                            mod2.addRow(res);
                
            }
        
        }catch(Exception ex){
            System.out.println(ex.getLocalizedMessage().toString());
        }
        
        // MOD 3
        try{
            
            pst = connection.prepareStatement("SELECT I.Title, I.Fname, I.Minit, I.Lname, I.PreferredHouseholdName,"
                        + " D.CampaignTitle, D.Amount, D.DDate, D.Notes"
                        + " FROM Individual as I left outer join Donations as D on (I.DonorID = D.DonorID)");
            
            rs = pst.executeQuery();
            
            while(rs.next()){
                
                String[] res = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),
                                rs.getString(7),rs.getString(8),rs.getString(9)};
                            
                            mod3.addRow(res);
                
            }
        
        }catch(Exception ex){
            System.out.println(ex.getLocalizedMessage().toString());
        }
        
        // MOD 4
        try{
            
            pst = connection.prepareStatement("SELECT C.OrgName, C.PrimaryContact,"
                        + " D.CampaignTitle, D.Amount, D.DDate, D.Notes"
                        + " FROM Corporate_Organization as C left outer join Donations as D on (C.DonorID = D.DonorID)");
            
            rs = pst.executeQuery();
            
            while(rs.next()){
                
                String[] res = {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6)};
                            
                            mod4.addRow(res);
                
            }
        
        }catch(Exception ex){
            System.out.println(ex.getLocalizedMessage().toString());
        }
        
        
    }
}
